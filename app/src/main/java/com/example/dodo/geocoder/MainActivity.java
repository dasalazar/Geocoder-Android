package com.example.dodo.geocoder;import android.content.Context;import android.location.Address;import android.location.Geocoder;import android.support.v7.app.AppCompatActivity;import android.os.Bundle;import android.util.Log;import android.view.View;import android.widget.EditText;import android.widget.TextView;import com.google.android.gms.maps.model.LatLng;import java.io.IOException;import java.util.List;import java.util.Locale;public class MainActivity extends AppCompatActivity {    EditText editTextEndereco;    TextView textViewLatitude;    TextView textViewLongitude;    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_main);        editTextEndereco = (EditText)findViewById(R.id.editText_Endereco);        textViewLatitude = (TextView) findViewById(R.id.textView_Latitude);        textViewLongitude = (TextView) findViewById(R.id.textView_Longitude);    }    public void buscar(View view){        LatLng latLng = reverseGeocoding(this,editTextEndereco.getText().toString());        textViewLatitude.setText(String.valueOf(latLng.latitude));        textViewLongitude.setText(String.valueOf(latLng.longitude));    }    public static LatLng reverseGeocoding(Context context, String locationName){        if(!Geocoder.isPresent()){            //Sem implementação        }        Geocoder geoCoder = new Geocoder(context, Locale.getDefault());        try {            List<Address> addresses = geoCoder.getFromLocationName(locationName, 1);            int tentatives = 0;            while (addresses.size()==0 && (tentatives < 10)) {                addresses = geoCoder.getFromLocationName(locationName, 1);                tentatives ++;            }            if(addresses.size() > 0){                return new LatLng(addresses.get(0).getLatitude(), addresses.get(0).getLongitude());            }else{                //use http api            }        } catch (IOException e) {            //Log.d(Geocoding.class.getName(), "not possible finding LatLng for Address : " + locationName);        }        return null;    }}